{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/quote.service.ts","./src/app/quote/quote.component.ts","./src/app/quote/quote.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { QuoteService } from './quote.service';\nimport { QuoteDetails } from './quote-details';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'Life Cover';\n\n  occupations: string[] = [];\n\n  premium: number = 0;\n\n  errors: string[] = [];\n\n  constructor(private quoteService: QuoteService){}\n\n  ngOnInit(): void {\n    this.getOccupations();\n  }\n\n  getOccupations(): void{\n    this.quoteService.getOccupations()\n      .subscribe(occupations => this.occupations = occupations);\n  }\n\n  onGetQuote(details: QuoteDetails){\n    console.log('app-component: quote:', JSON.stringify(details));\n    this.quoteService.getQuote(details)\n    .subscribe(p => \n      {\n        this.premium = p\n      },\n      err => {\n        this.errors = err.error;\n        console.log('errors: ', this.errors);\n      });\n  }\n}\n","<div class=\"container\">\n  <h1 class=\"text-success\">Life Cover - Quote</h1>\n  <hr>\n  <app-quote *ngIf=\"occupations.length > 0\" \n    [occupations]=\"occupations\"\n    (quote)=\"onGetQuote($event)\"></app-quote>\n    \n  <hr>\n\n    <div *ngIf=\"premium > 0\">\n      <p class=\"text-info\"> <strong>Your preimium: ${{premium}}</strong> </p> \n    </div>\n    <div *ngIf=\"errors.length > 0\" class=\"text-danger\">\n      <strong>Error occurred</strong>\n      <ul>\n        <li *ngFor=\"let e of errors\">{{e}}</li>\n      </ul>\n    </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { QuoteComponent } from './quote/quote.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuoteComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\nimport { QuoteDetails } from './quote-details';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuoteService {\n\n  apiBaseUrl = \"https://localhost:5001/\";\n  constructor(private http: HttpClient) { }\n  getOccupations(): Observable<string[]>{\n    var result = this.http.get<string[]>(this.apiBaseUrl + 'api/occupations');\n    console.log(result);\n    return result;\n  }\n\n  getQuote(details: QuoteDetails): Observable<number>{\n    var result = this.http.post<number>(this.apiBaseUrl + 'api/premium', details);\n    console.log(result);\n    return result;\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport { QuoteDetails } from '../quote-details';\n\n@Component({\n  selector: 'app-quote',\n  templateUrl: './quote.component.html',\n  styleUrls: ['./quote.component.css']\n})\nexport class QuoteComponent{\n\n  @Input() occupations: string[];\n  @Output() quote = new EventEmitter<QuoteDetails>();\n  model = <QuoteDetails>{};\n\n  onSubmit(myform: NgForm){\n    if(myform.valid){\n      console.log('valid');\n      this.requestQuote(this.model);\n    }\n    else{\n      console.log('not valid')\n    }\n  }\n  requestQuote(details: QuoteDetails){\n    this.quote.emit(details);\n  }\n}\n\n","<form #myForm=\"ngForm\" (ngSubmit)=\"onSubmit(myForm)\">\n    <div class=\"form-group\">\n        <label for=\"name\">Name</label>\n        <input type=\"text\" required class=\"form-control\" id=\"name\" [(ngModel)]=\"model.name\" name=\"name\" #name=\"ngModel\" placeholder=\"Enter your name\"\n        [ngClass]=\"{'is-invalid': myForm.submitted && name.invalid}\">\n    </div>\n    <div class=\"form-group\">\n        <label for=\"age\">Age</label>\n        <input type=\"number\" required class=\"form-control\" id=\"age\" [(ngModel)]=\"model.age\" name=\"age\" #age=\"ngModel\" placeholder=\"Enter your age\"\n        [ngClass]=\"{'is-invalid': myForm.submitted && age.invalid}\">\n    </div>\n    <div class=\"form-group\">\n        <label for=\"occupation\">Occupation</label>\n        <select class=\"form-control\" id=\"occupation\" [(ngModel)]=\"model.occupation\" name=\"occupation\" #occupation=\"ngModel\" required\n        [ngClass]=\"{'is-invalid': myForm.submitted && occupation.invalid}\">\n            <option *ngFor=\"let o of occupations\" [value]=\"o\">{{o}}</option>\n        </select>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"sumInsured\">Sum Insured</label>\n        <input type=\"number\" required class=\"form-control\" id=\"sumInsured\" [(ngModel)] = \"model.sumInsured\" name=\"sumInsured\" #sumInsured=\"ngModel\" placeholder=\"Enter sum insured\"\n        [ngClass]=\"{'is-invalid': myForm.submitted && sumInsured.invalid}\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Get Quote</button>\n</form>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}